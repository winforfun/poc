/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/state-tunnel';


export namespace Components {

  interface WinfunData {
    /**
    * URL to toprateddata.xml
    */
    'src': string;
  }
  interface WinfunDataAttributes extends StencilHTMLAttributes {
    /**
    * URL to toprateddata.xml
    */
    'src'?: string;
  }

  interface WinfunList {}
  interface WinfunListAttributes extends StencilHTMLAttributes {}

  interface WinfunPlayer {
    /**
    * The player favourite indicator
    */
    'favourite': boolean;
    /**
    * The player ID
    */
    'playerId': number;
  }
  interface WinfunPlayerAttributes extends StencilHTMLAttributes {
    /**
    * The player favourite indicator
    */
    'favourite'?: boolean;
    /**
    * The player ID
    */
    'playerId': number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'WinfunData': Components.WinfunData;
    'WinfunList': Components.WinfunList;
    'WinfunPlayer': Components.WinfunPlayer;
  }

  interface StencilIntrinsicElements {
    'winfun-data': Components.WinfunDataAttributes;
    'winfun-list': Components.WinfunListAttributes;
    'winfun-player': Components.WinfunPlayerAttributes;
  }


  interface HTMLWinfunDataElement extends Components.WinfunData, HTMLStencilElement {}
  var HTMLWinfunDataElement: {
    prototype: HTMLWinfunDataElement;
    new (): HTMLWinfunDataElement;
  };

  interface HTMLWinfunListElement extends Components.WinfunList, HTMLStencilElement {}
  var HTMLWinfunListElement: {
    prototype: HTMLWinfunListElement;
    new (): HTMLWinfunListElement;
  };

  interface HTMLWinfunPlayerElement extends Components.WinfunPlayer, HTMLStencilElement {}
  var HTMLWinfunPlayerElement: {
    prototype: HTMLWinfunPlayerElement;
    new (): HTMLWinfunPlayerElement;
  };

  interface HTMLElementTagNameMap {
    'winfun-data': HTMLWinfunDataElement
    'winfun-list': HTMLWinfunListElement
    'winfun-player': HTMLWinfunPlayerElement
  }

  interface ElementTagNameMap {
    'winfun-data': HTMLWinfunDataElement;
    'winfun-list': HTMLWinfunListElement;
    'winfun-player': HTMLWinfunPlayerElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
